<!-- /sections/collections.liquid -->

{%- liquid
  assign show_sort = section.settings.enable_sort
  assign filter_layout = section.settings.filter_layout

  assign show_group_filters = false

  if filter_layout == 'inline-open'
    assign show_group_filters = true
  endif

  comment
    The product limit decrement will be removed once we add more block types
  endcomment

  assign product_limit = section.settings.product_limit
  assign blocks_featured_image = section.blocks | where: "type", "featured_image"
  if blocks_featured_image.size > 0
    assign product_limit = product_limit | minus: 1
  endif

  assign section_blocks_filter_group = section.blocks | where: "type", "group"
  assign show_group_filter = false
  assign show_filter = false
  if section.settings.enable_filters and section_blocks_filter_group.size > 0
    assign show_group_filter = true
  elsif section.settings.enable_filters
    assign show_filter = true
  endif

  assign columns_desktop = section.settings.grid | plus: 0
  assign columns_medium = 3
  assign columns_small = 2
  assign columns_mobile = section.settings.grid_mobile | plus: 0

  if columns_desktop == 2 or columns_desktop == 4
    assign columns_medium = 2
  endif

  assign animation_anchor = '.collection-' | append: collection.handle
  assign animation_duration = 800
-%}

{%- capture image_sizes -%}
  (min-width: 1400px) calc(100vw / {{ columns_desktop }}), (min-width: 750px) calc(100vw / {{ columns_medium }}), (min-width: 480px) calc(100vw / {{ columns_small }}), calc(100vw / {{ columns_mobile }})
{%- endcapture -%}

{%- style -%}
  #Collection--{{ section.id }}{
    --PT: {{ section.settings.padding_top }}
    px;
    --PB: {{ section.settings.padding_bottom }}
    px;

    --COLUMNS: {{ columns_desktop }}
    ;
    --COLUMNS-MEDIUM: {{ columns_medium }}
    ;
    --COLUMNS-SMALL: {{ columns_small }}
    ;
    --COLUMNS-MOBILE: {{ columns_mobile }}
    ;
  }
{%- endstyle -%}

{%- capture collection_sidebar_class -%}
  {%- if filter_layout == 'slide-out' -%}
    collection__sidebar__slide-out
  {%- else -%}
    collection__sidebar__slider{% if show_group_filters %}
      expanded drawer--animated no-mobile-animation{% endif %}
  {%- endif -%}
{%- endcapture -%}

{%- paginate collection.products by product_limit -%}
  <section
    class="collection collection-products collection-{{ collection.handle }} section-padding"
    id="Collection--{{ section.id }}"
    data-section-id="{{ section.id }}"
    data-section-type="collection"
    data-sort="{{ show_sort }}"
    data-collection="{{ collection.url | default: '/collections/all' }}">

    {%- assign align_classes = '' -%}
    {%- if show_sort -%}
      {%- assign align_classes = align_classes | append: ' collection__nav--sort ' -%}
    {%- endif -%}

    {%- if show_filter or show_group_filter -%}
      {% assign align_classes = align_classes | append: ' collection__nav--filter ' %}
    {%- endif -%}

    {%- if show_sort or show_filter or show_group_filter -%}
      <nav
        id="collectionNav"
        class="collection__nav {{ align_classes }}"
        data-collection-nav>
        {%- if show_filter or show_group_filter -%}
          {%- liquid
            assign filter_active_count = 0

            if show_filter
              for filter in collection.filters
                assign filter_active_count = filter_active_count | plus: filter.active_values.size
              endfor
            endif

            if show_group_filter and current_tags.size > 0
              assign filter_active_count = current_tags.size
            endif
          -%}
          <div class="popout--group">
            <button
              type="button"
              class="popout__padding popout__toggle{% unless filter_layout == 'slide-out' %} popout__toggle--filters{% endunless %}"
              aria-expanded="{% if show_group_filters %}true{% else %}false{% endif %}"
              aria-controls="filter-groups"
              data-aria-toggle
              data-group-tags-enabled>

              {%- if filter_layout == 'slide-out' -%}
                {{ 'collections.general.filters' | t }}
              {%- else -%}
                <span class="popout__toggleable-text">
                  <span class="popout__expanded-show">
                    {{- 'collections.general.show_filters' | t -}}
                    <span class="filter-count{% if filter_active_count < 1 %} hidden{% endif %}" data-active-filters>
                      {{- filter_active_count -}}
                    </span>
                  </span>

                  <span class="popout__expanded-hide">
                    {{- 'collections.general.hide_filters' | t -}}
                    <span class="filter-count{% if filter_active_count < 1 %} hidden{% endif %}" data-active-filters>
                      {{- filter_active_count -}}
                    </span>
                  </span>
                </span>
              {%- endif -%}
              <div class="popout——left">
                <img src="https://img.ohdat.io/foundo-website/assets/shopify/shai.png" alt="">
              </div>
            </button>
          </div>

        {%- endif -%}

        <div style="display: flex;align-items: center;">
          <div onclick="changeImage()" class="popout——left">
            <img src="https://img.ohdat.io/foundo-website/assets/shopify/sifang.png" alt="">
          </div>
          <div onclick="changeImaged()" class="popout——left">
            <img src="https://img.ohdat.io/foundo-website/assets/shopify/tiao.png" alt="">
          </div>
          {%- if show_sort -%}
            {% render 'collection-sorting' %}
          {%- endif -%}
        </div>
        <div id="filledBoxId">
          {%- if show_filter or show_group_filter -%}
            <div
              style="position: absolute;top:40px;left:0;width:962px;height:calc(100vh - 40px);padding:10px;background:#ffffff;"
              class="{{ collection_sidebar_class }}"
              id="filter-groups"
              data-collection-sidebar>
              <div class="filled_box">
                <div
                  style="border: 1px solid #D0D0D0;color: #9B9B9B;"
                  onclick="Newest()"
                  class="filled_box_texted1 filled_box_text">Newest</div>
                <div
                  onclick="Low()"
                  style="border: 1px solid #D0D0D0;color: #9B9B9B;"
                  class="filled_box_texted2 filled_box_text">Price (Low to High)</div>
              </div>
              <div class="filled_box">
                <div
                  onclick="High()"
                  style="border: 1px solid #D0D0D0;color: #9B9B9B;"
                  class="filled_box_texted3 filled_box_text1">Price (High to Low)</div>
              </div>
              <p class="filled_xian"></p>
              <p class="filled_p">Material</p>
              <div class="filled_box">
                <div
                  style="border: 1px solid #D0D0D0;color: #9B9B9B;"
                  onclick="Kgold()"
                  class="filled_box_texted4 filled_box_text">18k gold</div>
                <div
                  onclick="Sterling()"
                  style="border: 1px solid #D0D0D0;color: #9B9B9B;"
                  class="filled_box_texted5 filled_box_text">Sterling silver</div>
              </div>
              <div class="filled_box">
                <div
                  style="border: 1px solid #D0D0D0;color: #9B9B9B;"
                  onclick="Whitegold()"
                  class="filled_box_texted6 filled_box_text">White gold</div>
                <div
                  onclick="Rosegold()"
                  style="border: 1px solid #D0D0D0;color: #9B9B9B;"
                  class="filled_box_texted7 filled_box_text">Rose gold</div>
              </div>
              <div class="filled_box">
                <div
                  style="border: 1px solid #D0D0D0;color: #9B9B9B;"
                  onclick="Brass()"
                  class="filled_box_texted8 filled_box_text">Brass</div>
                <div
                  onclick="Sandalwood()"
                  style="border: 1px solid #D0D0D0;color: #9B9B9B;"
                  class="filled_box_texted9 filled_box_text">Sandalwood</div>
              </div>
              <div class="filled_box">
                <div
                  style="border: 1px solid #D0D0D0;color: #9B9B9B;"
                  onclick="Silkwood()"
                  class="filled_box_texted10 filled_box_text">Brass</div>
              </div>
              <p class="filled_xian"></p>
              <p class="filled_p">Gemstone</p>
              <div class="filled_box">
                <div
                  style="border: 1px solid #D0D0D0;color: #9B9B9B;"
                  onclick="Diamond()"
                  class="filled_box_texted11 filled_box_text">Lab-grown Diamond</div>
                <div
                  onclick="Gem()"
                  style="border: 1px solid #D0D0D0;color: #9B9B9B;"
                  class="filled_box_texted12 filled_box_text">Gem</div>
              </div>
              <div class="filled_box">
                <div
                  style="border: 1px solid #D0D0D0;color: #9B9B9B;"
                  onclick="Pearls()"
                  class="filled_box_texted13 filled_box_text">Pearls</div>
              </div>
              <p class="filled_xian"></p>
              <p class="filled_p">Color</p>
              <div class="filled_box">
                <div
                  style="border: 1px solid #D0D0D0;color: #9B9B9B;"
                  onclick="Onekgold()"
                  class="filled_box_texted14 filled_box_text">18k gold</div>
                <div
                  onclick="SterlingSilver()"
                  style="border: 1px solid #D0D0D0;color: #9B9B9B;"
                  class="filled_box_texted15 filled_box_text">Sterling silver</div>
              </div>
              <div class="filled_box">
                <div
                  style="border: 1px solid #D0D0D0;color: #9B9B9B;"
                  onclick="WhiteGolded()"
                  class="filled_box_texted16 filled_box_text">White gold</div>
                <div
                  onclick="RoseGolded()"
                  style="border: 1px solid #D0D0D0;color: #9B9B9B;"
                  class="filled_box_texted17 filled_box_text">Rose gold</div>
              </div>
              <div class="filled_box">
                <div style="background: #00031E;;color: #F9F9F9;" class="filled_box_texted16 filled_box_text">Apply (567 Articles)</div>
                <div
                  onclick="detailsAll()"
                  style="border: 1px solid #00031E;color: #00031E;"
                  class="filled_box_texted17 filled_box_text">Reset Filters</div>
              </div>
            </div>
          {%- endif -%}
        </div>
      </nav>
    {%- endif -%}

    <div class="collection__products{% if show_filter or show_group_filter %} collection__products--group-tags{% endif %}">
      <div class="product-grid_tru action">
        <div class="grid-outer" data-products-grid>
          <div class="grid grid_tru" id="CollectionLoop">
            {%- if paginate.current_page == 1 and collection.products_count > 0 -%}
              {%- for block in section.blocks -%}
                {%- case block.type -%}
                  {%- when 'featured_image' -%}
                  {%- liquid
                    assign featured_image = block.settings.featured_image
                    assign featured_header = block.settings.featured_heading
                    assign featured_text = block.settings.featured_text
                    assign featured_button_text = block.settings.featured_button_text
                    assign featured_button_link = block.settings.featured_button_link
                    assign featured_color_text = block.settings.featured_color_text
                    assign featured_color_overlay = block.settings.featured_color_overlay
                    assign featured_overlay_opacity = block.settings.featured_overlay_opacity | times: 0.01

                    assign button_style = block.settings.button_style
                    if button_style == 'btn--text' and block.settings.show_arrow
                      assign button_style = button_style | append: ' btn--text-no-underline'
                    endif
                  -%}

                  {%- style -%}
                    #Product-item--{{ block.id }}.product-item__image-overlay {
                      {%- unless featured_color_text == 'rgba(0,0,0,0)' or featured_color_text == blank -%}
                        color: {{ featured_color_text }}
                        ;
                      {%- endunless -%}
                    }
                    #Product-item--{{ block.id }}.product-item__image-overlay::before {
                      opacity: {{ featured_overlay_opacity }}
                      ;
                      background-color: {{ featured_color_overlay }}
                      ;
                    }
                  {%- endstyle -%}

                  <div
                    class="grid-item product-item product-item--featured-image"
                    id="Product-item--{{ block.id }}"
                    {{ block.shopify_attributes }}>
                    {%- capture featured_image_content -%}
                      <div class="product-item__image-overlay">
                        <div class="product-item__image-content">
                          {%- if featured_header != blank -%}
                            <h3>{{ featured_header }}</h3>
                          {%- endif -%}

                          {%- if featured_text != blank -%}
                            {{ featured_text }}
                          {%- endif -%}

                          {%- if featured_button_text != blank -%}
                            <a
                              href="{{ featured_button_link }}"
                              class="btn {{ button_style }} {{ block.settings.button_type }} {{ block.settings.button_size }}"
                              data-aos="fade-up"
                              data-aos-anchor="{{ animation_anchor }}"
                              data-aos-duration="{{ animation_duration }}"
                              data-aos-delay="200">
                              <span>{{ featured_button_text }}</span>

                              {%- if block.settings.show_arrow -%}
                                {%- render 'icon-arrow-right' -%}
                              {%- endif -%}
                            </a>
                          {%- endif -%}
                        </div>

                        {%- if featured_button_text == blank and featured_button_link != blank -%}
                          <a
                            href="{{ featured_button_link }}"
                            class="product-item__image-link"
                            aria-label="{{ featured_image.alt | default: featured_header | default: featured_text | strip_html | escape }}"></a>
                        {%- endif -%}
                      </div>
                    {%- endcapture -%}

                    {%- unless featured_image == blank -%}
                      <div class="product-item__image">
                        <div
                          class="product-item__bg"
                          data-aos="img-in"
                          data-aos-anchor="{{ animation_anchor }}"
                          data-aos-delay="{{ animation_delay | times: 150 }}"
                          data-aos-duration="{{ animation_duration }}"
                          data-aos-easing="ease-out-quart">
                          {%- render 'image' image: featured_image, sizes: image_sizes, loading: 'eager', preload: 'true', fetchpriority: 'high', cover: true -%}
                        </div>

                        {{ featured_image_content }}
                      </div>
                    {%- else -%}
                      <div class="product-item__image">
                        <div class="svg-placeholder">
                          {% capture current %}
                            {% cycle 1, 2, 3, 4, 5, 6 %}{% endcapture %}
                          {{ 'collection-' | append: current | placeholder_svg_tag }}
                        </div>

                        {{ featured_image_content }}
                      </div>
                    {%- endunless -%}
                  </div>
                {%- endcase -%}
              {%- endfor -%}
            {%- endif -%}

            {%- if collection.products_count > 0 -%}
              {%- for product in collection.products -%}
                {%- assign grid_int = section.settings.grid | times: 1 -%}
                {%- assign animation_delay = forloop.index0 | modulo: grid_int | times: 1 -%}
                {%- render 'product-grid-itemed', product: product, animation_delay: animation_delay, index: forloop.index, sizes: image_sizes -%}
              {%- endfor -%}
            {%- else -%}
              <div class="no-results">
                <p>
                  <strong>{{ 'collections.general.no_matches' | t }}</strong>
                </p>
                {%- assign sort_by_string = '' -%}
                {%- if collection.sort_by != blank -%}
                  {%- assign sort_by_string = '?sort_by=' | append: collection.sort_by -%}
                {%- endif -%}
                <a
                  class="btn caps btn--primary"
                  href="{{ collection.url | append: sort_by_string }}"
                  data-filter-update-url>
                  <span>{{ 'collections.general.reset' | t }}</span>
                </a>
              </div>
            {%- endif -%}
          </div>

          {%- render 'pagination', paginate: paginate -%}

          <div class="grid__loader">
            <div class="loader grid__loader-line">
              <div class="loader-indeterminate"></div>
            </div>
          </div>
        </div>
      </div>
      <div class="product-grid_fal error">
        <div class="grid-outer" data-products-grid>
          <div class="grid" id="CollectionLoop">
            {%- if paginate.current_page == 1 and collection.products_count > 0 -%}
              {%- for block in section.blocks -%}
                {%- case block.type -%}
                  {%- when 'featured_image' -%}
                  {%- liquid
                    assign featured_image = block.settings.featured_image
                    assign featured_header = block.settings.featured_heading
                    assign featured_text = block.settings.featured_text
                    assign featured_button_text = block.settings.featured_button_text
                    assign featured_button_link = block.settings.featured_button_link
                    assign featured_color_text = block.settings.featured_color_text
                    assign featured_color_overlay = block.settings.featured_color_overlay
                    assign featured_overlay_opacity = block.settings.featured_overlay_opacity | times: 0.01

                    assign button_style = block.settings.button_style
                    if button_style == 'btn--text' and block.settings.show_arrow
                      assign button_style = button_style | append: ' btn--text-no-underline'
                    endif
                  -%}

                  {%- style -%}
                    #Product-item--{{ block.id }}.product-item__image-overlay {
                      {%- unless featured_color_text == 'rgba(0,0,0,0)' or featured_color_text == blank -%}
                        color: {{ featured_color_text }}
                        ;
                      {%- endunless -%}
                    }
                    #Product-item--{{ block.id }}.product-item__image-overlay::before {
                      opacity: {{ featured_overlay_opacity }}
                      ;
                      background-color: {{ featured_color_overlay }}
                      ;
                    }
                  {%- endstyle -%}

                  <div
                    class="grid-item product-item product-item--featured-image"
                    id="Product-item--{{ block.id }}"
                    {{ block.shopify_attributes }}>
                    {%- capture featured_image_content -%}
                      <div class="product-item__image-overlay">
                        <div class="product-item__image-content">
                          {%- if featured_header != blank -%}
                            <h3>{{ featured_header }}</h3>
                          {%- endif -%}

                          {%- if featured_text != blank -%}
                            {{ featured_text }}
                          {%- endif -%}

                          {%- if featured_button_text != blank -%}
                            <a
                              href="{{ featured_button_link }}"
                              class="btn {{ button_style }} {{ block.settings.button_type }} {{ block.settings.button_size }}"
                              data-aos="fade-up"
                              data-aos-anchor="{{ animation_anchor }}"
                              data-aos-duration="{{ animation_duration }}"
                              data-aos-delay="200">
                              <span>{{ featured_button_text }}</span>

                              {%- if block.settings.show_arrow -%}
                                {%- render 'icon-arrow-right' -%}
                              {%- endif -%}
                            </a>
                          {%- endif -%}
                        </div>

                        {%- if featured_button_text == blank and featured_button_link != blank -%}
                          <a
                            href="{{ featured_button_link }}"
                            class="product-item__image-link"
                            aria-label="{{ featured_image.alt | default: featured_header | default: featured_text | strip_html | escape }}"></a>
                        {%- endif -%}
                      </div>
                    {%- endcapture -%}

                    {%- unless featured_image == blank -%}
                      <div class="product-item__image">
                        <div
                          class="product-item__bg"
                          data-aos="img-in"
                          data-aos-anchor="{{ animation_anchor }}"
                          data-aos-delay="{{ animation_delay | times: 150 }}"
                          data-aos-duration="{{ animation_duration }}"
                          data-aos-easing="ease-out-quart">
                          {%- render 'image' image: featured_image, sizes: image_sizes, loading: 'eager', preload: 'true', fetchpriority: 'high', cover: true -%}
                        </div>

                        {{ featured_image_content }}
                      </div>
                    {%- else -%}
                      <div class="product-item__image">
                        <div class="svg-placeholder">
                          {% capture current %}
                            {% cycle 1, 2, 3, 4, 5, 6 %}{% endcapture %}
                          {{ 'collection-' | append: current | placeholder_svg_tag }}
                        </div>

                        {{ featured_image_content }}
                      </div>
                    {%- endunless -%}
                  </div>
                {%- endcase -%}
              {%- endfor -%}
            {%- endif -%}

            {%- if collection.products_count > 0 -%}
              {%- for product in collection.products -%}
                {%- assign grid_int = section.settings.grid | times: 1 -%}
                {%- assign animation_delay = forloop.index0 | modulo: grid_int | times: 1 -%}
                {%- render 'product-grid-item', product: product, animation_delay: animation_delay, index: forloop.index, sizes: image_sizes -%}
              {%- endfor -%}
            {%- else -%}
              <div class="no-results">
                <p>
                  <strong>{{ 'collections.general.no_matches' | t }}</strong>
                </p>
                {%- assign sort_by_string = '' -%}
                {%- if collection.sort_by != blank -%}
                  {%- assign sort_by_string = '?sort_by=' | append: collection.sort_by -%}
                {%- endif -%}
                <a
                  class="btn caps btn--primary"
                  href="{{ collection.url | append: sort_by_string }}"
                  data-filter-update-url>
                  <span>{{ 'collections.general.reset' | t }}</span>
                </a>
              </div>
            {%- endif -%}
          </div>

          {%- render 'pagination', paginate: paginate -%}

          <div class="grid__loader">
            <div class="loader grid__loader-line">
              <div class="loader-indeterminate"></div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>
{%- endpaginate -%}
<script>
  function Newest() {
    var navbar = document.querySelector(".filled_box_texted1");
    var navbar1 = document.querySelector(".filled_box_texted2");
    var navbar2 = document.querySelector(".filled_box_texted3");
    if (navbar.style.color === 'rgb(155, 155, 155)') {
      navbar.style.color = 'rgb(0, 3, 30)';
      navbar.style.border = '1px solid rgb(0, 3, 30';
      navbar1.style.color = 'rgb(155, 155, 155)';
      navbar1.style.border = '1px solid rgb(208, 208, 208)';
      navbar2.style.color = 'rgb(155, 155, 155)';
      navbar2.style.border = '1px solid rgb(208, 208, 208)';
    } else {
      navbar.style.color = 'rgb(155, 155, 155)';
      navbar.style.border = '1px solid rgb(208, 208, 208)';
    }
  }
  function Low() {
    var navbar = document.querySelector(".filled_box_texted2");
    var navbar1 = document.querySelector(".filled_box_texted1");
    var navbar2 = document.querySelector(".filled_box_texted3");
    if (navbar.style.color === 'rgb(155, 155, 155)') {
      navbar.style.color = 'rgb(0, 3, 30)';
      navbar.style.border = '1px solid rgb(0, 3, 30';
      navbar1.style.color = 'rgb(155, 155, 155)';
      navbar1.style.border = '1px solid rgb(208, 208, 208)';
      navbar2.style.color = 'rgb(155, 155, 155)';
      navbar2.style.border = '1px solid rgb(208, 208, 208)';
    } else {
      navbar.style.color = 'rgb(155, 155, 155)';
      navbar.style.border = '1px solid rgb(208, 208, 208)';
    }
  }
  function High() {
    var navbar = document.querySelector(".filled_box_texted3");
    var navbar1 = document.querySelector(".filled_box_texted2");
    var navbar2 = document.querySelector(".filled_box_texted1");
    if (navbar.style.color === 'rgb(155, 155, 155)') {
      navbar.style.color = 'rgb(0, 3, 30)';
      navbar.style.border = '1px solid rgb(0, 3, 30';
      navbar1.style.color = 'rgb(155, 155, 155)';
      navbar1.style.border = '1px solid rgb(208, 208, 208)';
      navbar2.style.color = 'rgb(155, 155, 155)';
      navbar2.style.border = '1px solid rgb(208, 208, 208)';
    } else {
      navbar.style.color = 'rgb(155, 155, 155)';
      navbar.style.border = '1px solid rgb(208, 208, 208)';
    }
  }
  function Kgold() {
    var navbar = document.querySelector(".filled_box_texted4");
    if (navbar.style.color === 'rgb(155, 155, 155)') {
      navbar.style.color = 'rgb(0, 3, 30)';
      navbar.style.border = '1px solid rgb(0, 3, 30';
    } else {
      navbar.style.color = 'rgb(155, 155, 155)';
      navbar.style.border = '1px solid rgb(208, 208, 208)';
    }
  }
  function Sterling() {
    var navbar = document.querySelector(".filled_box_texted5");
    if (navbar.style.color === 'rgb(155, 155, 155)') {
      navbar.style.color = 'rgb(0, 3, 30)';
      navbar.style.border = '1px solid rgb(0, 3, 30';
    } else {
      navbar.style.color = 'rgb(155, 155, 155)';
      navbar.style.border = '1px solid rgb(208, 208, 208)';
    }
  }
  function Whitegold() {
    var navbar = document.querySelector(".filled_box_texted6");
    if (navbar.style.color === 'rgb(155, 155, 155)') {
      navbar.style.color = 'rgb(0, 3, 30)';
      navbar.style.border = '1px solid rgb(0, 3, 30';
    } else {
      navbar.style.color = 'rgb(155, 155, 155)';
      navbar.style.border = '1px solid rgb(208, 208, 208)';
    }
  }
  function Rosegold() {
    var navbar = document.querySelector(".filled_box_texted7");
    if (navbar.style.color === 'rgb(155, 155, 155)') {
      navbar.style.color = 'rgb(0, 3, 30)';
      navbar.style.border = '1px solid rgb(0, 3, 30';
    } else {
      navbar.style.color = 'rgb(155, 155, 155)';
      navbar.style.border = '1px solid rgb(208, 208, 208)';
    }
  }
  function Brass() {
    var navbar = document.querySelector(".filled_box_texted8");
    if (navbar.style.color === 'rgb(155, 155, 155)') {
      navbar.style.color = 'rgb(0, 3, 30)';
      navbar.style.border = '1px solid rgb(0, 3, 30';
    } else {
      navbar.style.color = 'rgb(155, 155, 155)';
      navbar.style.border = '1px solid rgb(208, 208, 208)';
    }
  }
  function Sandalwood() {
    var navbar = document.querySelector(".filled_box_texted9");
    if (navbar.style.color === 'rgb(155, 155, 155)') {
      navbar.style.color = 'rgb(0, 3, 30)';
      navbar.style.border = '1px solid rgb(0, 3, 30';
    } else {
      navbar.style.color = 'rgb(155, 155, 155)';
      navbar.style.border = '1px solid rgb(208, 208, 208)';
    }
  }
  function Silkwood() {
    var navbar = document.querySelector(".filled_box_texted10");
    if (navbar.style.color === 'rgb(155, 155, 155)') {
      navbar.style.color = 'rgb(0, 3, 30)';
      navbar.style.border = '1px solid rgb(0, 3, 30';
    } else {
      navbar.style.color = 'rgb(155, 155, 155)';
      navbar.style.border = '1px solid rgb(208, 208, 208)';
    }
  }
  function Diamond() {
    var navbar = document.querySelector(".filled_box_texted11");
    if (navbar.style.color === 'rgb(155, 155, 155)') {
      navbar.style.color = 'rgb(0, 3, 30)';
      navbar.style.border = '1px solid rgb(0, 3, 30';
    } else {
      navbar.style.color = 'rgb(155, 155, 155)';
      navbar.style.border = '1px solid rgb(208, 208, 208)';
    }
  }
  function Gem() {
    var navbar = document.querySelector(".filled_box_texted12");
    if (navbar.style.color === 'rgb(155, 155, 155)') {
      navbar.style.color = 'rgb(0, 3, 30)';
      navbar.style.border = '1px solid rgb(0, 3, 30';
    } else {
      navbar.style.color = 'rgb(155, 155, 155)';
      navbar.style.border = '1px solid rgb(208, 208, 208)';
    }
  }
  function Pearls() {
    var navbar = document.querySelector(".filled_box_texted13");
    if (navbar.style.color === 'rgb(155, 155, 155)') {
      navbar.style.color = 'rgb(0, 3, 30)';
      navbar.style.border = '1px solid rgb(0, 3, 30';
    } else {
      navbar.style.color = 'rgb(155, 155, 155)';
      navbar.style.border = '1px solid rgb(208, 208, 208)';
    }
  }
  function Onekgold() {
    var navbar = document.querySelector(".filled_box_texted14");
    if (navbar.style.color === 'rgb(155, 155, 155)') {
      navbar.style.color = 'rgb(0, 3, 30)';
      navbar.style.border = '1px solid rgb(0, 3, 30';
    } else {
      navbar.style.color = 'rgb(155, 155, 155)';
      navbar.style.border = '1px solid rgb(208, 208, 208)';
    }
  }
  function SterlingSilver() {
    var navbar = document.querySelector(".filled_box_texted15");
    if (navbar.style.color === 'rgb(155, 155, 155)') {
      navbar.style.color = 'rgb(0, 3, 30)';
      navbar.style.border = '1px solid rgb(0, 3, 30';
    } else {
      navbar.style.color = 'rgb(155, 155, 155)';
      navbar.style.border = '1px solid rgb(208, 208, 208)';
    }
  }
  function WhiteGolded() {
    var navbar = document.querySelector(".filled_box_texted16");
    if (navbar.style.color === 'rgb(155, 155, 155)') {
      navbar.style.color = 'rgb(0, 3, 30)';
      navbar.style.border = '1px solid rgb(0, 3, 30';
    } else {
      navbar.style.color = 'rgb(155, 155, 155)';
      navbar.style.border = '1px solid rgb(208, 208, 208)';
    }
  }
  function RoseGolded() {
    var navbar = document.querySelector(".filled_box_texted17");
    if (navbar.style.color === 'rgb(155, 155, 155)') {
      navbar.style.color = 'rgb(0, 3, 30)';
      navbar.style.border = '1px solid rgb(0, 3, 30';
    } else {
      navbar.style.color = 'rgb(155, 155, 155)';
      navbar.style.border = '1px solid rgb(208, 208, 208)';
    }
  }
  function detailsAll() {
    var navbar1 = document.querySelector(".filled_box_texted1");
    var navbar2 = document.querySelector(".filled_box_texted2");
    var navbar3 = document.querySelector(".filled_box_texted3");
    var navbar4 = document.querySelector(".filled_box_texted4");
    var navbar5 = document.querySelector(".filled_box_texted5");
    var navbar6 = document.querySelector(".filled_box_texted6");
    var navbar7 = document.querySelector(".filled_box_texted7");
    var navbar8 = document.querySelector(".filled_box_texted8");
    var navbar9 = document.querySelector(".filled_box_texted9");
    var navbar10 = document.querySelector(".filled_box_texted10");
    var navbar11 = document.querySelector(".filled_box_texted11");
    var navbar12 = document.querySelector(".filled_box_texted12");
    var navbar13 = document.querySelector(".filled_box_texted13");
    var navbar14 = document.querySelector(".filled_box_texted14");
    var navbar15 = document.querySelector(".filled_box_texted15");
    var navbar16 = document.querySelector(".filled_box_texted16");
    var navbar17 = document.querySelector(".filled_box_texted17");
    navbar1.style.color = 'rgb(155, 155, 155)';
    navbar2.style.color = 'rgb(155, 155, 155)';
    navbar3.style.color = 'rgb(155, 155, 155)';
    navbar4.style.color = 'rgb(155, 155, 155)';
    navbar5.style.color = 'rgb(155, 155, 155)';
    navbar6.style.color = 'rgb(155, 155, 155)';
    navbar7.style.color = 'rgb(155, 155, 155)';
    navbar8.style.color = 'rgb(155, 155, 155)';
    navbar9.style.color = 'rgb(155, 155, 155)';
    navbar10.style.color = 'rgb(155, 155, 155)';
    navbar11.style.color = 'rgb(155, 155, 155)';
    navbar12.style.color = 'rgb(155, 155, 155)';
    navbar13.style.color = 'rgb(155, 155, 155)';
    navbar14.style.color = 'rgb(155, 155, 155)';
    navbar15.style.color = 'rgb(155, 155, 155)';
    navbar16.style.color = 'rgb(155, 155, 155)';
    navbar17.style.color = 'rgb(155, 155, 155)';
    navbar1.style.border = '1px solid rgb(208, 208, 208)';
    navbar2.style.border = '1px solid rgb(208, 208, 208)';
    navbar3.style.border = '1px solid rgb(208, 208, 208)';
    navbar4.style.border = '1px solid rgb(208, 208, 208)';
    navbar5.style.border = '1px solid rgb(208, 208, 208)';
    navbar6.style.border = '1px solid rgb(208, 208, 208)';
    navbar7.style.border = '1px solid rgb(208, 208, 208)';
    navbar8.style.border = '1px solid rgb(208, 208, 208)';
    navbar9.style.border = '1px solid rgb(208, 208, 208)';
    navbar10.style.border = '1px solid rgb(208, 208, 208)';
    navbar11.style.border = '1px solid rgb(208, 208, 208)';
    navbar12.style.border = '1px solid rgb(208, 208, 208)';
    navbar13.style.border = '1px solid rgb(208, 208, 208)';
    navbar14.style.border = '1px solid rgb(208, 208, 208)';
    navbar15.style.border = '1px solid rgb(208, 208, 208)';
    navbar16.style.border = '1px solid rgb(208, 208, 208)';
    navbar17.style.border = '1px solid rgb(208, 208, 208)';
  }

  function changeImage() {
    var imageContainers = document.querySelectorAll(".product-grid_tru");
    imageContainers.forEach(function(container) {
      container.classList.remove("error");
      container.classList.add("active");
    });
    var imageContainersed = document.querySelectorAll(".product-grid_fal");
    imageContainersed.forEach(function(container) {
      container.classList.remove("active");
      container.classList.add("error");
    });
  }
  function changeImaged() {
    var imageContainers = document.querySelectorAll(".product-grid_tru");
    imageContainers.forEach(function(container) {
      container.classList.remove("active");
      container.classList.add("error");
    });
    var imageContainersed = document.querySelectorAll(".product-grid_fal");
    imageContainersed.forEach(function(container) {
      container.classList.remove("error");
      container.classList.add("active");
    });
  }
</script>
{% schema %}
  {
    "name": "Collection products",
    "templates": ["collection"],
    "settings": [
      {
        "type": "checkbox",
        "id": "enable_sort",
        "label": "Show sorting",
        "default": true
      },
      {
        "type": "checkbox",
        "id": "enable_filters",
        "label": "Enable filters",
        "default": true
      },
      {
        "type": "select",
        "id": "filter_layout",
        "label": "Filter layout",
        "default": "inline-open",
        "options": [
          {
            "label": "Slide out",
            "value": "slide-out"
          }, {
            "label": "Inline (closed)",
            "value": "inline-closed"
          }, {
            "label": "Inline (open)",
            "value": "inline-open"
          }
        ]
      },
      {
        "type": "link_list",
        "id": "collection_linklist",
        "label": "Sidebar navigation",
        "info": "This menu won't show dropdown items."
      }, {
        "type": "header",
        "content": "Product grid"
      }, {
        "type": "range",
        "id": "grid",
        "label": "Products per row on desktop",
        "min": 2,
        "max": 6,
        "step": 1,
        "default": 3
      }, {
        "type": "radio",
        "id": "grid_mobile",
        "label": "Products per row on mobile",
        "options": [
          {
            "value": "1",
            "label": "One"
          }, {
            "value": "2",
            "label": "Two"
          }
        ],
        "default": "2"
      }, {
        "type": "range",
        "id": "product_limit",
        "min": 1,
        "max": 50,
        "step": 1,
        "label": "Products per page",
        "default": 36
      }, {
        "type": "header",
        "content": "Section padding"
      }, {
        "type": "range",
        "id": "padding_top",
        "min": 0,
        "max": 100,
        "step": 1,
        "unit": "px",
        "label": "Padding top",
        "default": 0
      }, {
        "type": "range",
        "id": "padding_bottom",
        "min": 0,
        "max": 100,
        "step": 1,
        "unit": "px",
        "label": "Padding bottom",
        "default": 0
      }
    ],
    "blocks": [
      {
        "type": "featured_image",
        "limit": 1,
        "name": "Featured image",
        "settings": [
          {
            "type": "image_picker",
            "id": "featured_image",
            "label": "Image"
          },
          {
            "type": "text",
            "id": "featured_heading",
            "label": "Heading",
            "default": "Featured link"
          },
          {
            "type": "richtext",
            "id": "featured_text",
            "label": "Text",
            "default": "<p>Promote products or collections</p>"
          },
          {
            "type": "text",
            "id": "featured_button_text",
            "label": "Button label",
            "default": "Learn more"
          }, {
            "type": "url",
            "id": "featured_button_link",
            "label": "Button link"
          }, {
            "type": "select",
            "id": "button_type",
            "label": "Color",
            "default": "btn--primary",
            "options": [
              {
                "value": "btn--primary",
                "label": "Primary"
              }, {
                "value": "btn--secondary",
                "label": "Secondary"
              }, {
                "value": "btn--white",
                "label": "White"
              }, {
                "value": "btn--black",
                "label": "Black"
              }
            ]
          }, {
            "type": "select",
            "id": "button_size",
            "label": "Size",
            "default": "",
            "options": [
              {
                "label": "Small",
                "value": "btn--small"
              }, {
                "label": "Medium",
                "value": ""
              }, {
                "label": "Large",
                "value": "btn--large"
              }
            ]
          }, {
            "type": "select",
            "id": "button_style",
            "label": "Style",
            "default": "btn--outline",
            "options": [
              {
                "label": "Solid",
                "value": "btn--solid"
              }, {
                "label": "Outline",
                "value": "btn--outline"
              }, {
                "label": "Text",
                "value": "btn--text"
              }
            ]
          }, {
            "type": "checkbox",
            "id": "show_arrow",
            "label": "Show button arrow",
            "default": false
          }, {
            "type": "color",
            "id": "featured_color_text",
            "label": "Text",
            "default": "#ffffff"
          }, {
            "type": "color",
            "id": "featured_color_overlay",
            "label": "Overlay",
            "default": "#222222"
          }, {
            "type": "range",
            "id": "featured_overlay_opacity",
            "label": "Overlay opacity",
            "step": 5,
            "max": 100,
            "min": 0,
            "unit": "%",
            "default": 10
          }
        ]
      }, {
        "type": "group",
        "name": "Legacy: Tag group",
        "settings": [
          {
            "type": "header",
            "content": "Legacy feature: tag grouping"
          }, {
            "type": "paragraph",
            "content": "This is a legacy feature that is intended to help merchants with large catalogs transition to OS2.0. Filtering by tag will be removed from Broadcast when 0S2.0 filters can fully replace their functionality. This method of tag-based product filtering cannot be combined with [OS2.0 filters](/admin/menus)."
          }, {
            "type": "text",
            "id": "title",
            "label": "Group name",
            "default": "Filter by size"
          }, {
            "type": "text",
            "id": "group_tags",
            "label": "Tag list",
            "default": "Small, Medium, Large",
            "info": "Comma separated group of tags"
          }
        ]
      }
    ]
  }
{% endschema %}